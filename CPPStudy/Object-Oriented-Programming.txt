'20.04.13

1. 절차지향이란?
   : 프로시저 단위로 설계하는 프로그래밍 기법을 말한다. 프로시저란, 함수를 의미하며 함수 단위로
프로그래밍을 하는 설계 기법을 말한다.

2. 객체지향이란? 필드와 메소드를 하나의 그룹으로 프로그래밍하는 기법을 말합니다.
   그 그룹을 클래스라고 말하며 클래스를 통해 객체를 생성할 수 있습니다.
   
	- 캡슐화 : 데이터와 함수를 하나로 묶어서 정리하는 것.

	- 클래스로부터 만들어지는 객체 : 인스턴스.

3. * 멤버함수가 클래스 내부에 정의되면 자동적으로 인라인 함수가 된다.
   *  멤버함수가 클래스 외부에 정의도면 일반적인 함수와 같이 함수 호출이 일어나게 된다. 

4. 코드를 재사용 하기 위해서 캡슐화, 상속, 다형성을 진행한다.
	- 캡슐화의 첫 번째 목적 : 1. 서로 관련되어 있는 데이터와 알고리즘을 묶는다. 
			        2. 객체를 캡슐로 싸서 객체 내부를 보호하기 위해서. - 정보 은닉
	- 상속 : 기존의 코드를 재활용 하기 위한 기법으로 이미 작성된 클래스(부모 클래스)를 이어받아서 
		새로운 클래스 (자식 클래스)를 생성하는 기법이다. 여기서 자식 클래스는 부모클래스의
		모든 속성과 동작을 물려받는다.
		(속성 : 멤버 변수, 필드       동작 : 멤버 함수, 메소드)

*** 계획단계
	1. 프로그램에서 사용될 객체와 클래스를 식별한다.
	2. 각 클래스의 속성을 정의한다.
	3. 각 클래스의 동작을 정의한다.
	4. 클래스간의 관계를 정의한다.